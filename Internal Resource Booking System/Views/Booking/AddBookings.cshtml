```cshtml
@model Internal_Resource_Booking_System.Models.Booking

@{
    ViewData["Title"] = "Add New Booking";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    .form-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .form-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15) !important;
        }

    .btn-animate {
        transition: transform 0.2s ease;
    }

        .btn-animate:hover {
            transform: scale(1.05);
        }

    .icon-pulse {
        display: inline-block;
        animation: pulse 1.5s infinite;
    }

    .form-label i {
        width: 24px;
        text-align: center;
    }

    .is-invalid ~ .invalid-feedback {
        display: block;
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.2);
        }

        100% {
            transform: scale(1);
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }
</style>

<h2 class="mb-4 fw-bold">
    <i class="fas fa-calendar-plus text-primary me-2 icon-pulse"></i>@ViewData["Title"]
</h2>

<!-- Success Alert -->
@if (TempData["SuccessMessage"] != null)
{
    <div id="successMsg" class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Error Alert -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!ViewData.ModelState.IsValid && ViewData.ModelState.Any())
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        <ul class="mb-0">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm p-4 mb-4 bg-light form-card">
    <form asp-action="AddBookings" asp-controller="Booking" method="post" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        <!-- Resource Dropdown -->
      <div class="mb-3">
            <label asp-for="ResourceId" class="form-label fw-bold">
                <i class="fas fa-building text-primary me-2"></i>ResourceId <span class="text-danger">*</span>
            </label>
            @if (ViewBag.Resources != null && ((SelectList)ViewBag.Resources).Any())
            {
                <select asp-for="ResourceId" asp-items="ViewBag.Resources" class="form-select" required>
                    <option value="">Select a resource</option>
                </select>
                <span asp-validation-for="ResourceId" class="invalid-feedback small">Please select a valid resource.</span>
            }
            else
            {
                <p class="text-danger"><i class="fas fa-exclamation-circle me-2"></i>No resources available. Please add a resource first.</p>
                <input asp-for="ResourceId" value="0" />
            } 
        </div>






        <!-- Start Time -->
        <div class="mb-3">
            <label asp-for="StartTime" class="form-label fw-bold">
                <i class="fas fa-clock text-primary me-2"></i>Start Time <span class="text-danger">*</span>
            </label>
            <input asp-for="StartTime" class="form-control" type="datetime-local" required />
            <span asp-validation-for="StartTime" class="invalid-feedback small">Start Time is required.</span>
        </div>

        <!-- End Time -->
        <div class="mb-3">
            <label asp-for="EndTime" class="form-label fw-bold">
                <i class="fas fa-clock text-primary me-2"></i>End Time <span class="text-danger">*</span>
            </label>
            <input asp-for="EndTime" class="form-control" type="datetime-local" required />
            <span asp-validation-for="EndTime" class="invalid-feedback small">End Time is required.</span>
        </div>

        <!-- Booked By -->
        <div class="mb-3">
            <label asp-for="BookedBy" class="form-label fw-bold">
                <i class="fas fa-user text-primary me-2"></i>Booked By
            </label>
            <input asp-for="BookedBy" class="form-control" />
            <span asp-validation-for="BookedBy" class="invalid-feedback small"></span>
        </div>

        <!-- Purpose -->
        <div class="mb-3">
            <label asp-for="Purpose" class="form-label fw-bold">
                <i class="fas fa-align-left text-primary me-2"></i>Purpose
            </label>
            <input asp-for="Purpose" class="form-control" />
            <span asp-validation-for="Purpose" class="invalid-feedback small"></span>
        </div>

        <!-- Buttons -->
        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-primary btn-lg btn-animate">
                <i class="fas fa-plus-circle me-2"></i>Add Booking
            </button>
            <a asp-action="Details" asp-controller="Resource" asp-route-id="@Model.ResourceId" class="btn btn-outline-secondary btn-lg btn-animate">
                <i class="fas fa-arrow-left me-2"></i>Back to Resource
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Client-side form validation
            $('form.needs-validation').on('submit', function (event) {
                const form = this;
                if (!form.checkValidity() || !$('#ResourceId').val() || $('#ResourceId').val() === '0') {
                    event.preventDefault();
                    event.stopPropagation();
                    if (!$('#ResourceId').val() || $('#ResourceId').val() === '0') {
                        $('#ResourceId').addClass('is-invalid');
                    }
                }
                $(form).addClass('was-validated');
            });

            // Auto-redirect on success after 2 seconds
            if ($('#successMsg').length) {
                setTimeout(() => {
                    window.location.href = '@Url.Action("Details", "Resource", new { id = Model.ResourceId })';
                }, 2000);
            }

            // Validate ResourceId dropdown on change
            $('#ResourceId').on('change', function () {
                if ($(this).val() && $(this).val() !== '0') {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });

            // Trigger validation on page load for retained values
            if ($('#ResourceId').val() && $('#ResourceId').val() !== '0') {
                $('#ResourceId').removeClass('is-invalid').addClass('is-valid');
            } else if ($('#ResourceId').length) {
                $('#ResourceId').addClass('is-invalid');
            }
        });
    </script>
}
```